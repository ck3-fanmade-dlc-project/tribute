# 宗主->朝貢国 朝貢の確立
# based: offer_vassalization_interaction
establish_tributary_interactions = {
	interface_priority = 30

	category = interaction_category_hostile
	common_interaction = yes
	desc = establish_tributary_interactions_desc
	icon = icon_dismiss_temporary_regency

	ai_targets = {
		ai_recipients = neighboring_rulers
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 12

	# どういうときに表示されるか
	is_shown = {
		# 宗主
		scope:actor = {
			highest_held_title_tier > tier_duchy
		}
		# 朝貢国
		scope:recipient = {
			NOT = { this = scope:actor }
			is_landed = yes
			is_independent_ruler = yes
			OR = {
				highest_held_title_tier < scope:actor.highest_held_title_tier
				AND = {
					highest_held_title_tier = tier_empire
					scope:actor.highest_held_title_tier = tier_empire
				}
			}
			NOT = { government_has_flag = can_not_be_vassal_or_liege }
		}
	}

	# どういうときに使用不可になるか
	is_valid_showing_failures_only = {
		scope:recipient = {
			NOT = { has_variable = is_tributary }
		}

		scope:recipient = {
			is_at_war = no

			custom_description = {
				text = was_recently_granted_independence
				NOT = {
					has_opinion_modifier = {
						modifier = granted_independence_opinion
						target = scope:actor
					}
				}
			}
		}
	}

	greeting = positive
	notification_text = OFFER_VASSALIZATION_INTERACTION_NOTIFICATION # todo

	ai_min_reply_days = 5
	ai_max_reply_days = 10

	ai_accept = {
		base = -50
	}

	on_accept = {
		establish_tributary_interaction_effect = yes
		scope:actor = {
			trigger_event = tribute_interaction.0001
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = tribute_interaction.0002
		}
	}

	ai_potential = {
		is_adult = yes
		is_independent_ruler = yes
		highest_held_title_tier > tier_county
	}

	ai_will_do = {
		base = 100

		modifier = { # If the recipient is a player, do not bother sending
			factor = 0
			scope:recipient = {
				is_ai = no
			}
		}
	}
}

# 朝貢国->宗主 朝貢国化の提案
become_tributary_interactions = {
	interface_priority = 30

	category = interaction_category_hostile
	common_interaction = yes
	desc = become_tributary_interactions_desc
	icon = icon_dismiss_entrenched_regency
}

# 宗主->朝貢国 朝貢の停止
cancel_tributary_from_overload_interactions = {
	interface_priority = 30

	category = interaction_category_hostile
	common_interaction = yes
	desc = cancel_tributary_from_overload_interactions_desc
	icon = independence
}

# 朝貢国->宗主 朝貢の停止
cancel_tributary_from_tributary_interactions = {
	interface_priority = 30

	category = interaction_category_hostile
	common_interaction = yes
	desc = cancel_tributary_from_tributary_interactions_desc
	icon = independence
}

call_overload_to_defensive_war_interaction = {
	category = interaction_category_diplomacy
	icon = alliance

	interface_priority = 60

	desc = call_overload_to_defensive_war_interaction_desc
	
	interface = call_ally
	special_interaction = call_ally_interaction
	popup_on_receive = yes
	pause_on_receive = yes
	
	notification_text = CALL_OVERLOAD_DEFENSIVE_WAR_NOTIFICATION
	
	is_shown = {
		NOT = { scope:recipient = scope:actor }

		scope:actor = {
			any_character_war = {
				primary_defender = scope:actor
			}
		}
		scope:actor = { has_variable = is_tributary }
		scope:actor = { has_variable = overload }
		scope:actor = { var:overload = scope:recipient }

		scope:recipient = { is_landed = yes }
		scope:recipient = {
			is_target_in_variable_list = {
				name = tributaries
				target = scope:actor
			}
		}

	}
	
	has_valid_target = {
		exists = scope:target
	}
	
	has_valid_target_showing_failures_only = {
		scope:target = {
			is_war_leader = scope:actor
		}
		joiner_not_already_in_another_war_with_any_target_war_participants_trigger = {
			WARRIOR = scope:actor
			JOINER = scope:recipient
		}
	}

	is_valid_showing_failures_only = {
		# 同じ宗主の朝貢国であれば呼べない
		custom_description = {
			text = "is_already_in_all_wars"
			scope:actor = {
				any_character_war = {
					NOR = {
						is_participant = scope:recipient
						was_called = scope:recipient
					}
					OR = {
						primary_attacker = scope:actor
						primary_defender = scope:actor
					}
				}
			}
		}
	}

	can_be_picked = {
		can_join_war_liege_vassal_check_trigger = { WARRIOR = scope:actor JOINER = scope:recipient }
	}

	on_auto_accept = {
		scope:recipient = {
			trigger_event = call_ally.0001
		}
	}
	
	on_accept = {
		call_house_member_to_war_interaction_effect = yes

		save_scope_value_as = {
			name = call_house_member_to_war_interaction
			value = yes
		}

		if = {
			limit = {
				exists = scope:target
			}

			scope:actor = {
				trigger_event = call_ally.0100
			}
		}

		scope:actor = {
			if = {
				limit = { NOT = {  is_house_head = yes } }
				add_prestige = medium_prestige_loss
			}
		}

		# If the Dynasty has the Unity Legacy perk, the recipient is rewarded with some Prestige
		if = {
			limit = { scope:actor.dynasty = { has_dynasty_perk = fp2_coterie_legacy_3 } }
			scope:recipient = {	add_prestige = medium_prestige_gain	}
		}
	}
	
	on_decline = {
		#The war could theoretically end on the day the decline is sent
		if = {
			limit = {
				exists = scope:target
			}

			scope:target = {
				if = {
					limit = {
						is_attacker = scope:actor
					}
					scope:actor = {
						add_opinion = {
							modifier = rejected_call_to_offensive_war
							target = scope:recipient
						}
					}
				}
				else = {
					scope:actor = {
						add_opinion = {
							modifier = rejected_call_to_defensive_war
							target = scope:recipient
						}
					}
				}
				scope:actor = {
					trigger_event = call_ally.0101
				}
			}

			# If we're a clan this interaction affects unity
			refuse_call_to_arms_add_clan_unity_effect = yes
		}
	}
	
	ai_accept = {
		base = 20

		modifier = {  # Refuse call to conflicts of little benefit
			add = -1000
			desc = WONT_FIGHT_MEANINGLESS_REASON
			trigger_if = {
				limit = { exists = scope:target }
				scope:target = { using_cb = fp2_border_raid }
				scope:recipient = { # Unless they like going on raids
					NOR = {
						has_trait = viking
						has_trait = reaver
					}
				}
			}
			trigger_else = { always = no }
		}

		modifier = {  # Refuse call against Heir
			add = -1000
			exists = scope:recipient.player_heir
			trigger_if = {
				limit = { scope:target.casus_belli.primary_defender = scope:actor }
				scope:target.casus_belli.primary_attacker = scope:recipient.player_heir
			}
			trigger_else = {
				scope:target.casus_belli.primary_defender = scope:recipient.player_heir
			}
			desc = WONT_FIGHT_HEIR_REASON
		}

		modifier = {  # Refuse call against Spouse
			add = -1000
			scope:recipient = {
				trigger_if = {
					limit = { scope:target.casus_belli.primary_defender = scope:actor }
					any_spouse = {
						this = scope:target.casus_belli.primary_attacker
					}
				}
				trigger_else = {
					any_spouse = {
						this = scope:target.casus_belli.primary_defender
					}
				}
				
			}
			desc = WONT_FIGHT_SPOUSE_REASON
		}

		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1.0
			desc = AI_OPINION_REASON
		}

		# Honor factor
		ai_value_modifier = {
			ai_honor = 1
			min = 0
		}

		modifier = {  # Tends to join defensive wars
			add = 50
			scope:target.casus_belli.primary_defender = scope:actor
			desc = DEFENSIVE_WAR_REASON
		}

		compare_modifier = { # Likes fighting infidels
			trigger = {
				scope:recipient.faith = scope:actor.faith
				OR = {
					AND = {
						scope:target.casus_belli.primary_attacker = {
							this = scope:actor
							faith = {
								faith_hostility_level = {
									target = scope:target.casus_belli.primary_defender.faith
									value >= religious_cb_enabled_hostility_level
								}
							}
						}
					}
					AND = {
						scope:target.casus_belli.primary_defender = {
							this = scope:actor
							faith = {
								faith_hostility_level = {
									target = scope:target.casus_belli.primary_defender.faith
									value >= religious_cb_enabled_hostility_level
								}
							}
						}
					}
				}
			}
			target = scope:recipient
			value = ai_zeal
			desc = "ZEAL_AGAINST_INFIDELS"
			min = 0
			multiplier = 0.5
		}

		modifier = {  # Reluctant to attack another ally
			add = -50
			scope:target.casus_belli.primary_attacker = scope:actor
			scope:recipient = {
				is_allied_to = scope:target.casus_belli.primary_defender
			}
			desc = ATTACK_ON_ALLY_REASON
		}

		modifier = {  # Reluctant to defend against another ally
			add = -25
			scope:target.casus_belli.primary_defender = scope:actor
			scope:recipient = {
				is_allied_to = scope:target.casus_belli.primary_attacker
			}
			desc = WAR_WITH_ALLY_REASON
		}

		modifier = {  # Reluctant to join wars against religious brethren.
			add = -50
			NOT = { scope:recipient.faith = scope:actor.faith }
			scope:target.casus_belli.primary_attacker = scope:actor
			scope:target.casus_belli.primary_defender.faith = scope:recipient.faith
			scope:target.casus_belli.war = {
				OR = {
					using_cb = minor_religious_war
					using_cb = religious_war
					using_cb = major_religious_war
					using_cb = undirected_great_holy_war
					using_cb = directed_great_holy_war
				}
			}
			desc = WONT_ATTACK_RELIGIOUS_BRETHREN_REASON
		}

		modifier = { # Happy to gain Prestige thanks to the Unity perk
			add = 50
			dynasty = { has_dynasty_perk = fp2_coterie_legacy_3 }
			desc = "UNITY_PERK_BONUS"
		}

		fp3_struggle_resist_allied_wars_modifier = yes
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
		}
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
}